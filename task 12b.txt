public class MinTaps {
    public static int minTaps(int n, int[] ranges) {
        int[] maxReach = new int[n + 1];
        for (int i = 0; i <= n; i++) {
            int left = Math.max(0, i - ranges[i]);
            int right = Math.min(n, i + ranges[i]);
            maxReach[left] = Math.max(maxReach[left], right);
        }
        int taps = 0;
        int currEnd = 0;
        int nextEnd = 0;
        for (int i = 0; i <= n; i++) {
            if (i > nextEnd) return -1; // can't reach position i
            nextEnd = Math.max(nextEnd, maxReach[i]);
            if (i == currEnd) {
                if (currEnd != nextEnd) {
                    taps++;
                    currEnd = nextEnd;
                }
                if (currEnd >= n) break;}
            }
        return currEnd >= n ? taps : -1;
    }
}
